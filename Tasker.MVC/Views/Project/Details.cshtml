@model Tasker.MVC.Models.ProjectModel
@using PagedList.Mvc;
@using PagedList;

@{
    if (Model == null)
    {
        Response.Redirect("Errors/Error404");
        return;
    }
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Project</h4>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-info" })
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DueDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DueDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Priority)
        </dt>

        <dd>
            @Html.DropDownListFor(model => model.Priority, new List<SelectListItem>
                       {
                           new SelectListItem {Text = "Low", Value = "0"},
                           new SelectListItem {Text = "Medium", Value = "1"},
                           new SelectListItem {Text = "High", Value = "2", },
                       }, new { @class = "form-control", disabled = "disabled" })
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Completed)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Completed)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit Project", "Update", new { id = Model.Id }, new { @class = "btn btn-success" })

</p>
<hr />

<h2>Tasks</h2>

<p>
    @Html.ActionLink("Create New", "Create", "ProjectTask", new { projectId = Model.Id }, new { @class = "btn btn-success" })
</p>

<div class="row">
    @using (Html.BeginForm())
    {
        @Html.DropDownList("searchProperty", new List<SelectListItem>
    {
        new SelectListItem {Text = "Show All", Value = "" },
        new SelectListItem {Text = "Name", Value = "Name" },
        new SelectListItem {Text = "Due Date >=", Value = "DueDate" },
        new SelectListItem {Text = "Priority", Value = "Priority" },
        new SelectListItem {Text = "Estimated Time >=", Value = "EstimatedTime" },
        new SelectListItem {Text = "Completed", Value = "Completed" },
        new SelectListItem {Text = "Description", Value = "Description" },
    }, new { @id = "ddl", @onchange = "onChangeFunc(this.value)" })

        @Html.TextBox("SearchString", null, new { @id = "txt", @style = "display: none" })
        @Html.TextBox("SearchDate", null, new { @id = "dat", @style = "display: none", @type = "date" })
        @*@Html.Label(ViewBag.searchDateTasks != null ? (string) ViewBag.searchDateTasks.ToString("dd-MM-yyyy") : "")*@
        @*@Html.TextBox("SearchDate", ViewBag.searchDateTasks != null ? (string)ViewBag.searchDateTasks.ToString("dd.MM.yyyy") : "",
            new { @id = "dat", @style = "display: none", @placeholder = "dd.MM.yyyy"})*@
        @Html.CheckBox("SearchBool", new { @id = "bol", @style = "display: none" })
        @Html.TextBox("SearchTime", null, new { @id = "tim", @style = "display: none", @placeholder = "HH:mm" })
        @*@Html.TextBox("SearchBool", null, new { @id = "bol", @style = "display: none", @type = "checkbox" })*@
        @*@Html.TextBox("SearchInt", null, new { @id = "num", @style = "display: none", @type = "number" })*@
        @Html.DropDownList("SearchInt", new List<SelectListItem>
                       {
                           new SelectListItem {Text = "Select Priority", Value = "" },
                           new SelectListItem {Text = "Low", Value = "0" },
                           new SelectListItem {Text = "Medium", Value = "1"},
                           new SelectListItem {Text = "High", Value = "2", },
                       }, new { @id = "num", @style = "display: none", @type = "number" })

        <input type="submit" value="Search" class="btn btn-lg" style="margin: auto" />
    }
</div>


<table class="table">
    <tr>
        <th>
            @if (ViewBag.sortByTasks != "Name")
            {
                @Html.ActionLink("Name", "Details", new { sortBy = "Name", sortDirection = "asc" })
            }
            else if (ViewBag.sortDirectionTasks == "asc" && ViewBag.sortByTasks == "Name")
            {
                @Html.ActionLink("Name " + (string)ViewBag.sortDirectionTasks, "Details", new { sortBy = "Name", sortDirection = "desc" })
            }
            else if (ViewBag.sortDirectionTasks == "desc" && ViewBag.sortByTasks == "Name")
            {
                @Html.ActionLink("Name " + (string)ViewBag.sortDirectionTasks, "Details", new { sortBy = "Id", sortDirection = "asc" })
            }
        </th>
        <th>
            @if (ViewBag.sortByTasks != "DueDate")
            {
                @Html.ActionLink("Due Date", "Details", new { sortBy = "DueDate", sortDirection = "asc" })
            }
            else if (ViewBag.sortDirectionTasks == "asc" && ViewBag.sortByTasks == "DueDate")
            {
                @Html.ActionLink("Due Date " + (string)ViewBag.sortDirectionTasks, "Details", new { sortBy = "DueDate", sortDirection = "desc" })
            }
            else if (ViewBag.sortDirectionTasks == "desc" && ViewBag.sortByTasks == "DueDate")
            {
                @Html.ActionLink("Due Date " + (string)ViewBag.sortDirectionTasks, "Details", new { sortBy = "Id", sortDirection = "asc" })
            }
        </th>
        <th>
            @if (ViewBag.sortByTasks != "Priority")
            {
                @Html.ActionLink("Priority", "Details", new { sortBy = "Priority", sortDirection = "asc" })
            }
            else if (ViewBag.sortDirectionTasks == "asc" && ViewBag.sortByTasks == "Priority")
            {
                @Html.ActionLink("Priority " + (string)ViewBag.sortDirectionTasks, "Details", new { sortBy = "Priority", sortDirection = "desc" })
            }
            else if (ViewBag.sortDirectionTasks == "desc" && ViewBag.sortByTasks == "Priority")
            {
                @Html.ActionLink("Priority " + (string)ViewBag.sortDirectionTasks, "Details", new { sortBy = "Id", sortDirection = "asc" })
            }
        </th>
        <th>
            @if (ViewBag.sortByTasks != "EstimatedTime")
            {
                @Html.ActionLink("Estimated Time", "Details", new { sortBy = "EstimatedTime", sortDirection = "asc" })
            }
            else if (ViewBag.sortDirectionTasks == "asc" && ViewBag.sortByTasks == "EstimatedTime")
            {
                @Html.ActionLink("Estimated Time " + (string)ViewBag.sortDirectionTasks, "Details", new { sortBy = "EstimatedTime", sortDirection = "desc" })
            }
            else if (ViewBag.sortDirectionTasks == "desc" && ViewBag.sortByTasks == "EstimatedTime")
            {
                @Html.ActionLink("Estimated Time " + (string)ViewBag.sortDirectionTasks, "Details", new { sortBy = "Id", sortDirection = "asc" })
            }
        </th>
        <th>
            @if (ViewBag.sortByTasks != "Completed")
            {
                @Html.ActionLink("Completed", "Details", new { sortBy = "Completed", sortDirection = "asc" })
            }
            else if (ViewBag.sortDirectionTasks == "asc" && ViewBag.sortByTasks == "Completed")
            {
                @Html.ActionLink("Completed " + (string)ViewBag.sortDirectionTasks, "Details", new { sortBy = "Completed", sortDirection = "desc" })
            }
            else if (ViewBag.sortDirectionTasks == "desc" && ViewBag.sortByTasks == "Completed")
            {
                @Html.ActionLink("Completed " + (string)ViewBag.sortDirectionTasks, "Details", new { sortBy = "Id", sortDirection = "asc" })
            }
        </th>
        <th>
            @if (ViewBag.sortByTasks != "Description")
            {
                @Html.ActionLink("Description", "Details", new { sortBy = "Description", sortDirection = "asc" })
            }
            else if (ViewBag.sortDirectionTasks == "asc" && ViewBag.sortByTasks == "Description")
            {
                @Html.ActionLink("Description " + (string)ViewBag.sortDirectionTasks, "Details", new { sortBy = "Description", sortDirection = "desc" })
            }
            else if (ViewBag.sortDirectionTasks == "desc" && ViewBag.sortByTasks == "Description")
            {
                @Html.ActionLink("Description " + (string)ViewBag.sortDirectionTasks, "Details", new { sortBy = "Id", sortDirection = "asc" })
            }
        </th>
        <th></th>
    </tr>
    @foreach (var item in Model.TasksPaged)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DueDate)
            </td>
            <td>
                @Html.DropDownListFor(modelItem => item.Priority, new List<SelectListItem>
                           {
                               new SelectListItem {Text = "Low", Value = "0", Selected = item.Priority == 0 ? true : false },
                               new SelectListItem {Text = "Medium", Value = "1", Selected = item.Priority == 1 ? true : false },
                               new SelectListItem {Text = "High", Value = "2", Selected = item.Priority == 2 ? true : false },
                           }, new { @class = "form-control", disabled = "disabled" })
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EstimatedTime)
            </td>
            <td>
                @Html.CheckBoxFor(modelItem => item.Completed, new { disabled = "disabled" })
            </td>
            <td>
                @Html.TextAreaFor(modelItem => item.Description, new { disabled = "disabled" })
            </td>
            <td>
                @*@Html.ActionLink("Edit", "Update", "ProjectTask" , new { id = item.Id }, null) |*@
                @Html.ActionLink("Task Detail", "Details", "ProjectTask", new { id = item.Id }, new { @class = "btn btn-primary btn-block" })
                @Html.ActionLink("Delete Task", "Delete", "ProjectTask", new { id = item.Id }, new { @class = "btn btn-danger btn-block" })
            </td>
        </tr>
    }
</table>
@{
    //Html.RenderPartial("~/Views/ProjectTask/Index.cshtml", Model.Tasks);
}
@*@RenderPage("~/Views/ProjectTask/Index.cshtml", Model.Tasks);*@

@Html.PagedListPager(Model.TasksPaged, pageNumber => Url.Action("Details", new
    {
        pageNumber,
        searchString = ViewBag.searchStringTasks,
        searchInt = ViewBag.searchIntTasks,
        searchDate = ViewBag.searchDateTasks,
        searchBool = ViewBag.searchBoolTasks,
        searchTime = ViewBag.searchTimeTasks,
        searchProperty = ViewBag.searchPropertyTasks
    }), new PagedListRenderOptions() { DisplayPageCountAndCurrentLocation = true })
