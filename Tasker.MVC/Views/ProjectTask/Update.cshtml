@model Tasker.MVC.Models.ProjectTaskModel

@{
    if (Model == null)
    {
        Response.Redirect("Errors/Error404");
        return;
    }
    ViewBag.Title = "Update";
}

<h2>Update</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Project Task</h4>
    <div>
        @Html.ActionLink("Back to Tasks", "Details", new { id = Model.Id }, new { @class = "btn btn-info" })
    </div>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.ProjectId)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DueDate,
                new { htmlAttributes = new { @Value = @Model.DueDate != null ? @Model.DueDate.Value.ToString("yyyy-MM-dd HH:mm:ss") : "",
                    @class = "form-control", @placeholder = "yyyy-MM-dd HH:mm" } })
            @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Priority, new List<SelectListItem>
           {
               new SelectListItem {Text = "Low", Value = "0" },
               new SelectListItem {Text = "Medium", Value = "1" },
               new SelectListItem {Text = "High", Value = "2" },
           }, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EstimatedTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EstimatedTime, new { htmlAttributes = new { @class = "form-control", @placeholder = "HH:mm" } })
            @Html.ValidationMessageFor(model => model.EstimatedTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Completed, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Completed)
                @Html.ValidationMessageFor(model => model.Completed, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @class = "col-md-10" })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Update" class="btn btn-success" />
        </div>
    </div>
</div>
}

@*<div>
    @Html.ActionLink("Back to List", "Details", "Project", new { id = Model.ProjectId }, null)
</div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
