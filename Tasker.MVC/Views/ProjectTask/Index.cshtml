@model IEnumerable<Tasker.MVC.Models.ProjectTaskModel>

@*@{
        ViewBag.Title = "Index";
    }

    <h2>Tasks</h2>*@

@*<p>
        @Html.ActionLink("Create New", "Create", "ProjectTask", new { projectId = Model }, new { @class = "btn btn-success" })
    </p>*@

@*@using (Html.BeginForm("Index", "ProjectTask", new {mId = index } ))*@
@*@{
        long projectId = (long) ViewData["pId"];
    }*@


@{
    //Html.RenderPartial("~/Views/ProjectTask/Index.cshtml", Model.Tasks);
}
@*@RenderPage("~/Views/ProjectTask/Index.cshtml", Model.Tasks);*@

@*Tried to use as RenderPage or RenderPartial - async problem for MVC 5 *@ 
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DueDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Priority)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EstimatedTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Completed)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DueDate)
            </td>
            <td>
                @Html.DropDownListFor(modelItem => item.Priority, new List<SelectListItem>
                               {
                                   new SelectListItem {Text = "Low", Value = "0", Selected = item.Priority == 0 ? true : false },
                                   new SelectListItem {Text = "Medium", Value = "1", Selected = item.Priority == 1 ? true : false },
                                   new SelectListItem {Text = "High", Value = "2", Selected = item.Priority == 2 ? true : false },
                               }, new { @class = "form-control", disabled = "disabled" })
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EstimatedTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Completed)
            </td>
            <td>
                @Html.TextAreaFor(modelItem => item.Description, new { disabled = "disabled" })
            </td>
            <td>
                @Html.ActionLink("Task Detail", "Details", "ProjectTask", new { id = item.Id }, new { @class = "btn btn-primary btn-block" })
                @Html.ActionLink("Delete Task", "Delete", "ProjectTask", new { id = item.Id }, new { @class = "btn btn-danger btn-block" })
            </td>
        </tr>
    }

</table>
